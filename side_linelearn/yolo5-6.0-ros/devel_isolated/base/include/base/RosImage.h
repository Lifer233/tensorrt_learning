// Generated by gencpp from file base/RosImage.msg
// DO NOT EDIT!


#ifndef BASE_MESSAGE_ROSIMAGE_H
#define BASE_MESSAGE_ROSIMAGE_H

#include <ros/service_traits.h>


#include <base/RosImageRequest.h>
#include <base/RosImageResponse.h>


namespace base
{

struct RosImage
{

typedef RosImageRequest Request;
typedef RosImageResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RosImage
} // namespace base


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::base::RosImage > {
  static const char* value()
  {
    return "222963dddca319dd44aea7d612d0ab69";
  }

  static const char* value(const ::base::RosImage&) { return value(); }
};

template<>
struct DataType< ::base::RosImage > {
  static const char* value()
  {
    return "base/RosImage";
  }

  static const char* value(const ::base::RosImage&) { return value(); }
};


// service_traits::MD5Sum< ::base::RosImageRequest> should match
// service_traits::MD5Sum< ::base::RosImage >
template<>
struct MD5Sum< ::base::RosImageRequest>
{
  static const char* value()
  {
    return MD5Sum< ::base::RosImage >::value();
  }
  static const char* value(const ::base::RosImageRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::base::RosImageRequest> should match
// service_traits::DataType< ::base::RosImage >
template<>
struct DataType< ::base::RosImageRequest>
{
  static const char* value()
  {
    return DataType< ::base::RosImage >::value();
  }
  static const char* value(const ::base::RosImageRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::base::RosImageResponse> should match
// service_traits::MD5Sum< ::base::RosImage >
template<>
struct MD5Sum< ::base::RosImageResponse>
{
  static const char* value()
  {
    return MD5Sum< ::base::RosImage >::value();
  }
  static const char* value(const ::base::RosImageResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::base::RosImageResponse> should match
// service_traits::DataType< ::base::RosImage >
template<>
struct DataType< ::base::RosImageResponse>
{
  static const char* value()
  {
    return DataType< ::base::RosImage >::value();
  }
  static const char* value(const ::base::RosImageResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BASE_MESSAGE_ROSIMAGE_H
